name: News & Announcements

on:
  release:
    types: [published]
  issues:
    types: [opened, labeled]
  workflow_dispatch:
    inputs:
      announcement_type:
        description: 'Type of announcement'
        required: true
        default: 'general'
        type: choice
        options:
        - general
        - release
        - feature
        - security
      title:
        description: 'Announcement title'
        required: true
      message:
        description: 'Announcement message'
        required: true

jobs:
  handle-release-announcement:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create GitHub Discussion for Release
      uses: actions/github-script@v7
      with:
        script: |
          const { data: discussion } = await github.rest.discussions.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `🚀 SheetsBot ${{ github.event.release.tag_name }} Released!`,
            body: `
          ## 🎉 New Release: SheetsBot ${{ github.event.release.tag_name }}
          
          We're excited to announce the release of SheetsBot ${{ github.event.release.tag_name }}!
          
          ### 📦 Download
          
          **Quick Install:**
          - **Linux/Mac**: \`curl -sSL https://github.com/boadamm/demoproject/raw/main/install.sh | bash\`
          - **Windows**: [Download installer](${{ github.event.release.html_url }})
          
          ### 📋 Release Notes
          
          ${{ github.event.release.body }}
          
          ### 🔗 Links
          - [📥 Download Release](${{ github.event.release.html_url }})
          - [📝 Full Changelog](https://github.com/boadamm/demoproject/blob/main/CHANGELOG.md)
          - [📚 Documentation](https://github.com/boadamm/demoproject/blob/main/README.md)
          
          ### 💬 Feedback
          Please share your experience with this release! Report any issues or share feedback in the comments below.
          
          ---
          **Enjoy the new features!** 🎯
            `,
            category_id: await github.rest.repos.getAllDiscussionCategories({
              owner: context.repo.owner,
              repo: context.repo.repo,
            }).then(res => res.data.find(cat => cat.name === 'Announcements')?.id || res.data[0].id)
          });
          
          console.log(`Created discussion: ${discussion.html_url}`);
          
    - name: Update README with latest release
      run: |
        # Extract version from tag
        VERSION=${{ github.event.release.tag_name }}
        
        # Update README badges and links
        sed -i "s|Latest Release.*|Latest Release](https://img.shields.io/github/v/release/boadamm/demoproject?label=latest)](https://github.com/boadamm/demoproject/releases/latest)|g" README.md
        
        # Commit if changes were made
        if git diff --quiet; then
          echo "No changes to commit"
        else
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "docs: update README for release ${VERSION}"
          git push
        fi

  handle-announcement-issues:
    if: github.event_name == 'issues' && contains(github.event.issue.labels.*.name, 'announcement')
    runs-on: ubuntu-latest
    
    steps:
    - name: Process Announcement Issue
      uses: actions/github-script@v7
      with:
        script: |
          const issue = context.payload.issue;
          
          // Extract announcement details from issue body
          const body = issue.body;
          const title = issue.title.replace('[ANNOUNCEMENT] ', '');
          
          // Create GitHub Discussion
          try {
            const { data: discussion } = await github.rest.discussions.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `📢 ${title}`,
              body: `
          ## 📢 Community Announcement
          
          ${body}
          
          ---
          _This announcement was automatically created from issue #${issue.number}_
              `,
              category_id: await github.rest.repos.getAllDiscussionCategories({
                owner: context.repo.owner,
                repo: context.repo.repo,
              }).then(res => res.data.find(cat => cat.name === 'Announcements')?.id || res.data[0].id)
            });
            
            // Comment on the issue with discussion link
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              body: `✅ **Announcement published!** 
          
          📢 **Discussion**: ${discussion.html_url}
          
          The announcement has been automatically posted to our community discussions. Community members can now engage with this announcement.`
            });
            
            // Add labels
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              labels: ['published', 'community']
            });
            
          } catch (error) {
            console.error('Error creating discussion:', error);
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issue.number,
              body: `❌ **Error publishing announcement**
          
          There was an error creating the discussion. Please check the GitHub Actions logs for details.
          
          Error: ${error.message}`
            });
          }

  manual-announcement:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    
    steps:
    - name: Create Manual Announcement
      uses: actions/github-script@v7
      with:
        script: |
          const title = `${{ github.event.inputs.title }}`;
          const message = `${{ github.event.inputs.message }}`;
          const type = `${{ github.event.inputs.announcement_type }}`;
          
          const typeEmojis = {
            'general': '📢',
            'release': '🚀',
            'feature': '🎉',
            'security': '🔒'
          };
          
          const emoji = typeEmojis[type] || '📢';
          
          const { data: discussion } = await github.rest.discussions.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `${emoji} ${title}`,
            body: `
          ## ${emoji} ${title}
          
          ${message}
          
          ---
          _Posted on: ${new Date().toISOString().split('T')[0]}_
            `,
            category_id: await github.rest.repos.getAllDiscussionCategories({
              owner: context.repo.owner,
              repo: context.repo.repo,
            }).then(res => res.data.find(cat => cat.name === 'Announcements')?.id || res.data[0].id)
          });
          
          console.log(`Manual announcement created: ${discussion.html_url}`);

  update-community-metrics:
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Update Community Metrics
      uses: actions/github-script@v7
      with:
        script: |
          // This could be expanded to track community engagement metrics
          const { data: discussions } = await github.rest.discussions.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
          });
          
          const { data: releases } = await github.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo,
            per_page: 5
          });
          
          console.log(`Community Stats:`);
          console.log(`- Total Discussions: ${discussions.length}`);
          console.log(`- Recent Releases: ${releases.length}`);
          console.log(`- Latest Release: ${releases[0]?.tag_name || 'None'}`); 